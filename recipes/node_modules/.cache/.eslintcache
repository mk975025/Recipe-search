[{"/Users/anthony/Coding/CSUN-study-buddies/recipes/src/index.js":"1","/Users/anthony/Coding/CSUN-study-buddies/recipes/src/App.js":"2","/Users/anthony/Coding/CSUN-study-buddies/recipes/src/components/Recipes.js":"3","/Users/anthony/Coding/CSUN-study-buddies/recipes/src/components/Nav.js":"4","/Users/anthony/Coding/CSUN-study-buddies/recipes/src/components/Nutrition.js":"5","/Users/anthony/Coding/CSUN-study-buddies/recipes/src/components/Recipe.js":"6"},{"size":197,"mtime":1626315607770,"results":"7","hashOfConfig":"8"},{"size":807,"mtime":1629254372791,"results":"9","hashOfConfig":"8"},{"size":2786,"mtime":1627694011625,"results":"10","hashOfConfig":"8"},{"size":1640,"mtime":1629254381632,"results":"11","hashOfConfig":"8"},{"size":140,"mtime":1626746428533,"results":"12","hashOfConfig":"8"},{"size":612,"mtime":1627694775620,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"megq8t",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/anthony/Coding/CSUN-study-buddies/recipes/src/index.js",[],["28","29"],"/Users/anthony/Coding/CSUN-study-buddies/recipes/src/App.js",[],"/Users/anthony/Coding/CSUN-study-buddies/recipes/src/components/Recipes.js",["30"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Recipe from \"./Recipe\";\nimport Nutrition from \"./Nutrition\";\nimport styles from \"./Styles/Recipes.module.css\";\n\nexport default function Recipes() {\n  const [nutritionSearch, setNutritionSearch] = useState(\"milk\");\n  const [nutrition, setNutrition] = useState([]);\n\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"cookies\");\n  const [loading, setLoading] = useState(false);\n  const [recipes, setRecipes] = useState([]);\n\n  const API_KEY = \"0ea4476c15af3a504a8878f0b3cbbbe6\";\n  const API_ID = \"3d45a097\";\n\n  const NUTRITION_API_KEY = \"b341aafccfc844c75dafbec9590327c8\";\n  const NUTRITION_API_ID = \"4656ed26\";\n\n  useEffect(() => {\n    setLoading(true);\n    fetchRecipes();\n    fetchNutrition();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n  const fetchRecipes = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${API_ID}&app_key=${API_KEY}`\n    );\n    const data = await response.json();\n    setRecipes(data.hits);\n    // console.log(data.hits);\n    setLoading(false);\n  };\n  const fetchNutrition = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/api/nutrition-data?app_id=${NUTRITION_API_ID}&app_key=${NUTRITION_API_KEY}&nutrition-type=cooking&ingr=${nutritionSearch}`\n    );\n    const data = await response.json();\n    setNutrition(data.healthLabels);\n    // console.log(data.healthLabels);\n    setLoading(false);\n  };\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div className={styles.recipes_container}>\n      <form className={styles.form_wrapper} onSubmit={getSearch}>\n        <input\n          type=\"text\"\n          placeholder=\"Search for recipes\"\n          className={styles.searchbar}\n          value={search}\n          onChange={updateSearch}\n        />\n        <button className={styles.search_button} type=\"submit\">\n          Search\n        </button>\n      </form>\n\n      {typeof recipes[0] !== \"undefined\" && (\n        <div className={styles.recipes}>\n          {recipes.map((recipe) => (\n            <Recipe\n              key={recipe.recipe.label}\n              title={recipe.recipe.label}\n              calories={Math.round(recipe.recipe.calories)}\n              image={recipe.recipe.image}\n              ingredients={recipe.recipe.ingredients}\n            />\n          ))}\n          {nutrition.map((label, index) => (\n            <Nutrition key={index} healthLabel={label} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","/Users/anthony/Coding/CSUN-study-buddies/recipes/src/components/Nav.js",[],"/Users/anthony/Coding/CSUN-study-buddies/recipes/src/components/Nutrition.js",[],"/Users/anthony/Coding/CSUN-study-buddies/recipes/src/components/Recipe.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":8,"column":27,"nodeType":"37","messageId":"38","endLine":8,"endColumn":45},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'setNutritionSearch' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]